  
# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the gh-pages branch
  push:
    branches: [MAIN]
  pull_request:
    branches: [MAIN]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [2.7, 3.5, 3.7]


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      #- name: HTML5 Validator
      # You may pin to the exact commit or the version.
      # uses: Cyb3r-Jak3/html5validator-action@0add3e3a734b3e41cbae0f971538363993ac8b18
      #  uses: Cyb3r-Jak3/html5validator-action@v0.6.1
      # with:
      #    root: /
      
      #- name: Check code meets quality standards
       # id: code-inspector
        #uses: codeinspectorio/github-action@master
        #with:
        #  repo_token: ${{ secrets.GITHUB_TOKEN }}
         # code_inspector_access_key: ${{ secrets.CODE_INSPECTOR_ACCESS_KEY }}
         # code_inspector_secret_key: ${{ secrets.CODE_INSPECTOR_SECRET_KEY }}
         # min_quality_grade: 'WARNING'
         # min_quality_score: '50'
         # max_defects_rate: '0.0001'
         # max_complex_functions_rate: '0.0001'
         # max_long_functions_rate: '0.0001'
         # project_name: ''
         # max_timeout_sec: '600'

      - uses: actions/upload-artifact@v2
        with:
          name: log
          path: log.log
          
      - name: Project Wallace Diff
        uses: projectwallace/css-diff-action@master
        with:
          project-wallace-token: ${{ secrets.PROJECT_WALLACE_TOKEN }}
          github-token: ${{ secrets.TOKEN }}
          css-path: ./build/style.css
          
 
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Test/requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test With CrossBrowserTesting
        run: |
          python Test/test_testNavigate.py


